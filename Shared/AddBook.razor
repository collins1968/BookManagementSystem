
<div class="mt-4 p-4 bg-gray-100 rounded-lg shadow-lg">
    <h2 class="text-xl font-semibold mb-4">Add Book</h2>
    <EditForm Model="newBook" OnValidSubmit="AddNewBook">
        <DataAnnotationsValidator />
        <div class="mb-4">
            <label for="Title" class="block text-gray-700 font-semibold mb-2">Title:</label>
            <InputText id="Title" @bind-Value="newBook.Title" class="form-input w-full py-2 px-3 rounded-md shadow-sm" />
            <ValidationMessage For="@(() => newBook.Title)" class="text-red-500 mt-2" />
        </div>
        <div class="mb-4">
            <label for="Description" class="block text-gray-700 font-semibold mb-2">Description:</label>
            <InputTextArea id="Description" @bind-Value="newBook.Description" class="form-textarea w-full py-2 px-3 rounded-md shadow-sm" />
            <ValidationMessage For="@(() => newBook.Description)" class="text-red-500 mt-2" />
        </div>
         @foreach(var author in newBook.Authors)
        {
            <div class="mb-4">
                <label for="Authors" class="block text-gray-700 font-semibold mb-2">Author:</label>
                <InputText id="Authors" @bind-Value="@author.Name"
                           class="form-input w-full py-2 px-3 rounded-md shadow-sm" />
                <ValidationMessage For="@(() => author.Name)" class="text-red-500 mt-2" />
            </div>
        }
        <button type="button" onclick="@(()=>newBook.Authors.Add(new AuthorDto()))">Add Author</button>
        <div class="mb-4">
            <button type="submit" class="bg-green-500 text-white hover:bg-green-700 px-4 py-2 rounded-md">
                Add Book
            </button>
        </div>
    </EditForm>
</div>

@code {
public BookDto newBook { get; set; } = new BookDto()
        {
            Id = Guid.NewGuid()
        };

[Parameter]
public EventCallback<BookDto> OnBookAdded { get; set; }

[Parameter]

public EventCallback<BookDto> OnBookEdited { get; set; }



 public async Task AddNewBook()
 {
    await OnBookAdded.InvokeAsync(newBook);
    newBook = new BookDto();
 }

 public async Task EditBook()
 {
    await OnBookEdited.InvokeAsync(newBook);
    newBook = new BookDto();
 }

}
